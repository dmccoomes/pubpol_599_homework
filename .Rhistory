<<<<<<< HEAD
ToPlot=prop.table(absoluteT)
names(ToPlot)
names(ToPlot)[5]='Unknown'
# the pie plots the table:
titleText='Where are Public Schools located in WA in 2019?'
sourceText='Source: US Department of Education'
# the pie plots the table:
titleText2='WA still has schools locations unknown \n (info from 2018)'
# the pie plots the table:
titleText3='WA needs to fully categorize school locations\n(info from 2018)'
#DMC - the \n moves the rest of the title to the next line
ToPlot*100
# details:
ToPlot=ToPlot*100 # preparing labels
paletteHereNew=c('gray') # just one color
=======
<<<<<<< HEAD
df.C[order(df.C$Percent),]
base = ggplot(df.C, aes(x=reorder(Crime, Percent), y = Percent))
loliplot1 = base + geom_segment(aes(y = 0,
x = Crime,
yend = Percent,
xend = Crime), color = "grey50")
loliplot2 = loliplot1 + geom_point()
loliplot3 = loliplot2 + facet_wrap( ~Daytime, nrow=1)
loliplot3 + coord_flip()
df.C_ord=tableFreq[order(df.C$Crime),]
df.C_ord=df.C[order(df.C$Crime),]
base = ggplot(df.C_ord, aes(x=reorder(Crime, Percent), y = Percent))
loliplot1 = base + geom_segment(aes(y = 0,
x = Crime,
yend = Percent,
xend = Crime), color = "grey50")
loliplot2 = loliplot1 + geom_point()
loliplot3 = loliplot2 + facet_wrap( ~Daytime, nrow=1)
loliplot3 + coord_flip()
df.C_ord=df.C[order(df.C$Percent),]
base = ggplot(df.C_ord, aes(x=reorder(Crime, Percent), y = Percent))
loliplot1 = base + geom_segment(aes(y = 0,
x = Crime,
yend = Percent,
xend = Crime), color = "grey50")
loliplot2 = loliplot1 + geom_point()
loliplot3 = loliplot2 + facet_wrap( ~Daytime, nrow=1)
loliplot3 + coord_flip()
df.C_ord=df.C[order(df.C$Percent),]
base = ggplot(df.C_ord, aes(x=reorder(Crime, Percent), y = Percent))
loliplot1 = base + geom_segment(aes(y = 0,
x = Crime,
yend = Percent,
xend = Crime), color = "grey50")
loliplot2 = loliplot1 + geom_point()
loliplot3 = loliplot2 + facet_wrap( ~Daytime, nrow=1)
loliplot3 + coord_flip()
df.C_ord=df.C_ord[order(df.C$Percent),]
base = ggplot(df.C_ord, aes(x=reorder(Crime, Percent), y = Percent))
loliplot1 = base + geom_segment(aes(y = 0,
x = Crime,
yend = Percent,
xend = Crime), color = "grey50")
loliplot2 = loliplot1 + geom_point()
loliplot3 = loliplot2 + facet_wrap( ~Daytime, nrow=1)
loliplot3 + coord_flip()
df.C_ord=df.C[order(df.C$Percent),]
#base = ggplot(df.C_ord, aes(x=reorder(Crime, Percent), y = Percent))
base = ggplot(df.C_ord, aes(x=Crime, y=Percent))
loliplot1 = base + geom_segment(aes(y = 0,
x = Crime,
yend = Percent,
xend = Crime), color = "grey50")
loliplot2 = loliplot1 + geom_point()
loliplot3 = loliplot2 + facet_wrap( ~Daytime, nrow=1)
loliplot3 + coord_flip()
df.C_ord=df.C[order(df.C$Percent),]
#base = ggplot(df.C_ord, aes(x=reorder(Crime, Percent), y = Percent))
base = ggplot(df.C_ord, aes(x=Crime, y=Percent))
loliplot1 = base + geom_segment(aes(y = 0,
x = Crime,
yend = Percent,
xend = Crime), color = "grey50")
loliplot2 = loliplot1 + geom_point()
loliplot3 = loliplot2 + facet_wrap( ~Daytime, nrow=1)
lolliplot3 + scale_x_discrete(limits=df.C_ord$Percent) # key element
df.C_ord=df.C[order(df.C$Percent),]
#base = ggplot(df.C_ord, aes(x=reorder(Crime, Percent), y = Percent))
base = ggplot(df.C_ord, aes(x=Crime, y=Percent))
loliplot1 = base + geom_segment(aes(y = 0,
x = Crime,
yend = Percent,
xend = Crime), color = "grey50")
loliplot2 = loliplot1 + geom_point()
loliplot3 = loliplot2 + facet_wrap( ~Daytime, nrow=1)
loliplot3 + scale_x_discrete(limits=df.C_ord$Percent) # key element
df.C_ord=df.C[order(df.C$Percent),]
#base = ggplot(df.C_ord, aes(x=reorder(Crime, Percent), y = Percent))
base = ggplot(df.C_ord, aes(x=Crime, y=Percent))
loliplot1 = base + geom_segment(aes(y = 0,
x = Crime,
yend = Percent,
xend = Crime), color = "grey50")
loliplot2 = loliplot1 + geom_point()
loliplot3 = loliplot2 + facet_wrap( ~Daytime, nrow=1)
loliplot3 + scale_x_discrete(limits=df.C_ord$Crime) # key element
loliplot3 + coord_flip()
df.C_ord=df.C[order(df.C$Percent),]
#base = ggplot(df.C_ord, aes(x=reorder(Crime, Percent), y = Percent))
base = ggplot(df.C_ord, aes(x=Crime, y=Percent))
loliplot1 = base + geom_segment(aes(y = 0,
x = Crime,
yend = Percent,
xend = Crime), color = "grey50")
loliplot2 = loliplot1 + geom_point()
loliplot3 = loliplot2 + facet_wrap( ~Daytime, nrow=1)
loliplot3 + scale_x_discrete(limits=df.C_ord$Crime) # key element
#loliplot3 + coord_flip()
df.C_ord=df.C[order(df.C$Percent),]
#base = ggplot(df.C_ord, aes(x=reorder(Crime, Percent), y = Percent))
base = ggplot(df.C_ord, aes(x=Crime, y=Percent))
loliplot1 = base + geom_segment(aes(y = 0,
x = Crime,
yend = Percent,
xend = Crime), color = "grey50")
loliplot2 = loliplot1 + geom_point()
loliplot3 = loliplot2 + facet_wrap( ~Daytime, nrow=1)
loliplot3 + scale_x_discrete(limits=df.C_ord$Crime) + coord_flip()# key element
#loliplot3 + coord_flip()
df.C_ord=df.C[order(df.C$Percent),]
#base = ggplot(df.C_ord, aes(x=reorder(Crime, Percent), y = Percent))
base = ggplot(df.C_ord, aes(x=Crime, y=Percent))
loliplot1 = base + geom_segment(aes(y = 0,
x = Crime,
yend = Percent,
xend = Crime), color = "grey50")
loliplot2 = loliplot1 + geom_point()
loliplot3 = loliplot2 + facet_wrap( ~Daytime, nrow=1)
loliplot3 + scale_y_discrete(limits=df.C_ord$Crime) + coord_flip()# key element
#loliplot3 + coord_flip()
df.C_ord=df.C[order(df.C$Percent),]
#base = ggplot(df.C_ord, aes(x=reorder(Crime, Percent), y = Percent))
base = ggplot(df.C_ord, aes(x=Crime, y=Percent))
loliplot1 = base + geom_segment(aes(y = 0,
x = Crime,
yend = Percent,
xend = Crime), color = "grey50")
loliplot2 = loliplot1 + geom_point()
loliplot3 = loliplot2 + facet_wrap( ~Daytime, nrow=1)
#loliplot3 + scale_x_discrete(limits=df.C_ord$Crime) + coord_flip()# key element
loliplot3 + scale_x_discrete() + coord_flip()
#loliplot3 + coord_flip()
df.C_ord=df.C[order(df.C$Percent),]
#base = ggplot(df.C_ord, aes(x=reorder(Crime, Percent), y = Percent))
base = ggplot(df.C_ord, aes(x=Crime, y=Percent))
loliplot1 = base + geom_segment(aes(y = 0,
x = Crime,
yend = Percent,
xend = Crime), color = "grey50")
loliplot2 = loliplot1 + geom_point()
loliplot3 = loliplot2 + facet_wrap( ~Daytime, nrow=1)
loliplot3 + scale_x_discrete(limits=df.C_ord$Percent) + coord_flip()# key element
df.C_ord=df.C[order(df.C$Percent),]
#base = ggplot(df.C_ord, aes(x=reorder(Crime, Percent), y = Percent))
base = ggplot(df.C_ord, aes(x=Crime, y=Percent))
loliplot1 = base + geom_segment(aes(y = 0,
x = Crime,
yend = Percent,
xend = Crime), color = "grey50")
loliplot2 = loliplot1 + geom_point()
loliplot3 = loliplot2 + facet_wrap( ~Daytime, nrow=1)
loliplot3 + scale_y_discrete(limits=df.C_ord$Percent) + coord_flip()# key element
#loliplot3 + scale_x_discrete() + coord_flip()
#loliplot3 + coord_flip()
df.C_ord=df.C[order(df.C$Percent),]
#base = ggplot(df.C_ord, aes(x=reorder(Crime, Percent), y = Percent))
base = ggplot(df.C_ord, aes(x=Crime, y=Percent))
loliplot1 = base + geom_segment(aes(y = 0,
x = Crime,
yend = Percent,
xend = Crime), color = "grey50")
loliplot2 = loliplot1 + geom_point()
loliplot3 = loliplot2 + facet_wrap( ~Daytime, nrow=1)
loliplot3 + scale_x_discrete(limits=df.C_ord$Crime) + coord_flip()# key element
#loliplot3 + scale_x_discrete() + coord_flip()
#loliplot3 + coord_flip()
df.C_ord=df.C[order(df.C$Percent),]
#base = ggplot(df.C_ord, aes(x=reorder(Crime, Percent), y = Percent))
base = ggplot(df.C_ord, aes(x=Crime, y=Percent))
loliplot1 = base + geom_segment(aes(y = 0,
x = Crime,
yend = Percent,
xend = Crime), color = "grey50")
loliplot2 = loliplot1 + geom_point()
loliplot3 = loliplot2 + facet_wrap( ~Daytime, nrow=1)
loliplot3 + scale_x_discrete(limits=df.C$Crime) + coord_flip()# key element
#loliplot3 + scale_x_discrete() + coord_flip()
#loliplot3 + coord_flip()
df.C_ord=df.C[order(df.C$Percent),]
#base = ggplot(df.C_ord, aes(x=reorder(Crime, Percent), y = Percent))
base = ggplot(df.C_ord, aes(x=Crime, y=Percent))
loliplot1 = base + geom_segment(aes(y = 0,
x = Crime,
yend = Percent,
xend = Crime), color = "grey50")
loliplot2 = loliplot1 + geom_point()
loliplot3 = loliplot2 + facet_wrap( ~Daytime, nrow=1)
#loliplot3 + scale_x_discrete(limits=df.C$Crime) + coord_flip()# key element
#loliplot3 + scale_x_discrete() + coord_flip()
#loliplot3 + coord_flip()
df.C_ord=df.C[order(df.C$Percent),]
#base = ggplot(df.C_ord, aes(x=reorder(Crime, Percent), y = Percent))
base = ggplot(df.C_ord, aes(x=Crime, y=Percent))
loliplot1 = base + geom_segment(aes(y = 0,
x = Crime,
yend = Percent,
xend = Crime), color = "grey50")
loliplot2 = loliplot1 + geom_point()
loliplot3 = loliplot2 + facet_wrap( ~Daytime, nrow=1)
#loliplot3 + scale_x_discrete(limits=df.C$Crime) + coord_flip()# key element
#loliplot3 + scale_x_discrete() + coord_flip()
loliplot3 + coord_flip()
df.C_ord=df.C[order(df.C$Percent),]
#base = ggplot(df.C_ord, aes(x=reorder(Crime, Percent), y = Percent))
base = ggplot(df.C_ord, aes(x=Crime, y=Percent)) + scale_x_discrete(limits=tableFreqO$locale) # key element
df.C_ord=df.C[order(df.C$Percent),]
#base = ggplot(df.C_ord, aes(x=reorder(Crime, Percent), y = Percent))
base = ggplot(df.C_ord, aes(x=Crime, y=Percent)) + scale_x_discrete(limits=df.C$Crime) # key element
loliplot1 = base + geom_segment(aes(y = 0,
x = Crime,
yend = Percent,
xend = Crime), color = "grey50")
loliplot2 = loliplot1 + geom_point()
loliplot3 = loliplot2 + facet_wrap( ~Daytime, nrow=1)
#loliplot3 + scale_x_discrete(limits=df.C$Crime) + coord_flip()# key element
#loliplot3 + scale_x_discrete() + coord_flip()
loliplot3 + coord_flip()
df.C_ord=df.C[order(df.C$Percent),]
#base = ggplot(df.C_ord, aes(x=reorder(Crime, Percent), y = Percent))
base = ggplot(df.C_ord, aes(x=Crime, y=Percent))
loliplot1 = base + geom_segment(aes(y = 0,
x = Crime,
yend = Percent,
xend = Crime), color = "grey50")
loliplot2 = loliplot1 + geom_point()
loliplot3 = loliplot2 + facet_wrap( ~Daytime, nrow=1)
#loliplot3 + scale_x_discrete(limits=df.C$Crime) + coord_flip()# key element
#loliplot3 + scale_x_discrete() + coord_flip()
loliplot3 + coord_flip()
# heatplot
base  = ggplot(df.C, aes(x = Daytime, y = reorder(Crime, Percent), fill = Percent))
heat1 = base +  geom_tile()
heat2 = heat1 +scale_fill_gradient(low = "white",
high = "black")
heat2
df.C_ord=df.C[order(df.C$Percent),]
base = ggplot(df.C_ord, aes(x=reorder(Daytime, Percent), y = Percent))
#base = ggplot(df.C_ord, aes(x=Crime, y=Percent))
loliplot1 = base + geom_segment(aes(y = 0,
x = Crime,
yend = Percent,
xend = Crime), color = "grey50")
loliplot2 = loliplot1 + geom_point()
loliplot3 = loliplot2 + facet_wrap( ~Daytime, nrow=1)
#loliplot3 + scale_x_discrete(limits=df.C$Crime) + coord_flip()# key element
#loliplot3 + scale_x_discrete() + coord_flip()
loliplot3 + coord_flip()
df.C_ord=df.C[order(df.C$Percent),]
base = ggplot(df.C_ord, aes(x = Daytime, y = reorder(Crime, Percent))
#base = ggplot(df.C_ord, aes(x=Crime, y=Percent))
loliplot1 = base + geom_segment(aes(y = 0,
df.C_ord=df.C[order(df.C$Percent),]
base = ggplot(df.C_ord, aes(x = Daytime, y = reorder(Crime, Percent)))
#base = ggplot(df.C_ord, aes(x=Crime, y=Percent))
loliplot1 = base + geom_segment(aes(y = 0,
x = Crime,
yend = Percent,
xend = Crime), color = "grey50")
loliplot2 = loliplot1 + geom_point()
loliplot3 = loliplot2 + facet_wrap( ~Daytime, nrow=1)
#loliplot3 + scale_x_discrete(limits=df.C$Crime) + coord_flip()# key element
#loliplot3 + scale_x_discrete() + coord_flip()
loliplot3 + coord_flip()
df.C_ord=df.C[order(df.C$Percent),]
base = ggplot(df.C_ord, aes(x = Daytime, y = reorder(Daytime, Percent)))
#base = ggplot(df.C_ord, aes(x=Crime, y=Percent))
loliplot1 = base + geom_segment(aes(y = 0,
x = Crime,
yend = Percent,
xend = Crime), color = "grey50")
loliplot2 = loliplot1 + geom_point()
loliplot3 = loliplot2 + facet_wrap( ~Daytime, nrow=1)
#loliplot3 + scale_x_discrete(limits=df.C$Crime) + coord_flip()# key element
#loliplot3 + scale_x_discrete() + coord_flip()
loliplot3 + coord_flip()
df.C_ord=df.C[order(df.C$Percent),]
base = ggplot(df.C_ord, aes(x = Daytime, y = reorder(Crime, Percent)))
#base = ggplot(df.C_ord, aes(x=Crime, y=Percent))
loliplot1 = base + geom_segment(aes(y = 0,
x = Crime,
yend = Percent,
xend = Crime), color = "grey50")
loliplot2 = loliplot1 + geom_point()
loliplot3 = loliplot2 + facet_wrap( ~Daytime, nrow=1)
#loliplot3 + scale_x_discrete(limits=df.C$Crime) + coord_flip()# key element
#loliplot3 + scale_x_discrete() + coord_flip()
loliplot3 + coord_flip()
df.C_ord=df.C[order(df.C$Percent),]
base = ggplot(df.C_ord, aes(x = Crime, y = reorder(Crime, Percent)))
#base = ggplot(df.C_ord, aes(x=Crime, y=Percent))
loliplot1 = base + geom_segment(aes(y = 0,
x = Crime,
yend = Percent,
xend = Crime), color = "grey50")
loliplot2 = loliplot1 + geom_point()
loliplot3 = loliplot2 + facet_wrap( ~Daytime, nrow=1)
#loliplot3 + scale_x_discrete(limits=df.C$Crime) + coord_flip()# key element
#loliplot3 + scale_x_discrete() + coord_flip()
loliplot3 + coord_flip()
df.C_ord=df.C[order(df.C$Percent),]
base = ggplot(df.C_ord, aes(x = reorder(Crime, Percent) y = Percent))
df.C_ord=df.C[order(df.C$Percent),]
base = ggplot(df.C_ord, aes(x = reorder(Crime, Percent) y = Percent)
df.C_ord=df.C[order(df.C$Percent),]
base = ggplot(df.C_ord, aes(x = reorder(Crime, Percent), y = Percent)
#base = ggplot(df.C_ord, aes(x=Crime, y=Percent))
loliplot1 = base + geom_segment(aes(y = 0,
df.C_ord=df.C[order(df.C$Percent),]
base = ggplot(df.C_ord, aes(x = reorder(Crime, Percent), y = Percent))
#base = ggplot(df.C_ord, aes(x=Crime, y=Percent))
loliplot1 = base + geom_segment(aes(y = 0,
x = Crime,
yend = Percent,
xend = Crime), color = "grey50")
loliplot2 = loliplot1 + geom_point()
loliplot3 = loliplot2 + facet_wrap( ~Daytime, nrow=1)
#loliplot3 + scale_x_discrete(limits=df.C$Crime) + coord_flip()# key element
#loliplot3 + scale_x_discrete() + coord_flip()
loliplot3 + coord_flip()
df.C_ord=df.C[order(df.C$Percent),]
base = ggplot(df.C_ord, aes(x = reorder(Crime, Percent), y = Percent))
#base = ggplot(df.C_ord, aes(x=Crime, y=Percent))
loliplot1 = base + geom_segment(aes(y = 0,
x = Crime,
yend = Percent,
xend = Crime), color = "grey50")
loliplot2 = loliplot1 + geom_point()
loliplot3 = loliplot2 + facet_wrap( ~Daytime, nrow=1)
loliplot3 + scale_x_discrete(limits=df.C$CrimeCol) + coord_flip()# key element
#loliplot3 + scale_x_discrete() + coord_flip()
loliplot3 + coord_flip()
df.C_ord=df.C[order(df.C$Percent),]
base = ggplot(df.C_ord, aes(x = reorder(Crime, Percent), y = Percent))
#base = ggplot(df.C_ord, aes(x=Crime, y=Percent))
loliplot1 = base + geom_segment(aes(y = 0,
x = Crime,
yend = Percent,
xend = Crime), color = "grey50")
loliplot2 = loliplot1 + geom_point()
loliplot3 = loliplot2 + facet_wrap( ~Daytime, nrow=1)
loliplot3 + scale_x_discrete(limits=df.C$Crime) + coord_flip()# key element
#loliplot3 + scale_x_discrete() + coord_flip()
loliplot3 + coord_flip()
df.C_ord=df.C[order(df.C$Percent),]
base = ggplot(df.C_ord, aes(x = reorder(Crime, Percent), y = Percent))
#base = ggplot(df.C_ord, aes(x=Crime, y=Percent))
loliplot1 = base + geom_segment(aes(y = 0,
x = Crime,
yend = Percent,
xend = Crime), color = "grey50")
loliplot2 = loliplot1 + geom_point()
loliplot3 = loliplot2 + facet_wrap( ~Daytime, nrow=1)
loliplot3 + scale_x_discrete(limits=df.C$Crime) + coord_flip()# key element
#loliplot3 + scale_x_discrete() + coord_flip()
loliplot3 + coord_flip()
df.C_ord=df.C[order(df.C$Percent),]
base = ggplot(df.C_ord, aes(x = reorder(Crime, Percent), y = Percent))
#base = ggplot(df.C_ord, aes(x=Crime, y=Percent))
loliplot1 = base + geom_segment(aes(y = 0,
x = Crime,
yend = Percent,
xend = Crime), color = "grey50")
loliplot2 = loliplot1 + geom_point()
loliplot3 = loliplot2 + facet_wrap( ~Daytime, nrow=1)
loliplot3 + scale_x_discrete(limits=df.C$Percent) + coord_flip()# key element
df.C_ord=df.C[order(df.C$Percent),]
base = ggplot(df.C_ord, aes(x = reorder(Crime, Percent), y = Percent))
#base = ggplot(df.C_ord, aes(x=Crime, y=Percent))
loliplot1 = base + geom_segment(aes(y = 0,
x = Crime,
yend = Percent,
xend = Crime), color = "grey50")
loliplot2 = loliplot1 + geom_point()
loliplot3 = loliplot2 + facet_wrap( ~Daytime, nrow=1)
loliplot3 + scale_x_discrete(limits=df.C_ord$Crime) + coord_flip()# key element
#loliplot3 + scale_x_discrete() + coord_flip()
loliplot3 + coord_flip()
df.C_ord=df.C[order(df.C$Percent),]
base = ggplot(df.C_ord, aes(x = reorder(Crime, Percent), y = Percent))
#base = ggplot(df.C_ord, aes(x=Crime, y=Percent))
loliplot1 = base + geom_segment(aes(y = 0,
x = reorder(Crime, Percent),
yend = Percent,
xend = Crime), color = "grey50")
loliplot2 = loliplot1 + geom_point()
loliplot3 = loliplot2 + facet_wrap( ~Daytime, nrow=1)
loliplot3 + scale_x_discrete(limits=df.C_ord$Crime) + coord_flip()# key element
#loliplot3 + scale_x_discrete() + coord_flip()
loliplot3 + coord_flip()
df.C_ord=df.C[order(df.C$Percent),]
base = ggplot(df.C_ord, aes(x = reorder(Crime, Percent), y = Percent))
#base = ggplot(df.C_ord, aes(x=Crime, y=Percent))
loliplot1 = base + geom_segment(aes(y = 0,
x = reorder(Crime, Percent),
yend = Percent,
xend = Crime), color = "grey50")
loliplot2 = loliplot1 + geom_point()
loliplot3 = loliplot2 + facet_wrap( ~Daytime, nrow=1)
loliplot3 + coord_flip()
# heatplot
base  = ggplot(df.C, aes(x = Daytime, y = reorder(Crime, Percent), fill = Percent))
heat1 = base +  geom_tile()
heat2 = heat1 +scale_fill_gradient(low = "white",
high = "black")
heat2
heat3 = heat2 + theme_classic()
heat4 = heat3 + theme(axis.text.x = element_text(angle = 90, vjust = 0.6),
legend.title = element_blank(), #no title for legend
legend.position="top",
legend.direction="horizontal",
legend.key.width=unit(1, "cm"),
legend.key.height=unit(1, "cm"))
heat4 + labs(y="Crime")
df.C_ord=df.C[order(df.C$Percent),]
base = ggplot(df.C_ord, aes(x = reorder(Crime, Percent), y = Percent))
#base = ggplot(df.C_ord, aes(x=Crime, y=Percent))
loliplot1 = base + geom_segment(aes(y = 0,
x = reorder(Crime, Percent),
yend = Percent,
xend = Crime), color = "grey50")
loliplot2 = loliplot1 + geom_point()
loliplot3 = loliplot2 + facet_wrap( ~Daytime, nrow=1)
loliplot3 + coord_flip()
summary(crime$DaysToReport)
heat3 = heat2 + theme_classic()
heat4 = heat3 + theme(axis.text.x = element_text(angle = 90, vjust = 0.6),
legend.title = element_blank(), #no title for legend
legend.position="top",
legend.direction="horizontal",
legend.key.width=unit(1, "cm"),
legend.key.height=unit(1, "cm"))
heat4 + labs(y="Crime")
base  = ggplot(df.T, aes(x = Crime, y = Percent ) )
bars1 = base + geom_bar( stat = "identity" ) + theme_minimal()
# bar per day time with 'facet'
bars2 = bars1 + facet_wrap( ~ Daytime ,nrow = 1)
bars2
base  = ggplot(df.C, aes(x = reorder(Crime, Percent), y = Percent ) )
bars1 = base + geom_bar( stat = "identity" )
bars2 = bars1 + facet_wrap( ~ Daytime ,nrow = 1)
bars2 + coord_flip() + theme(axis.text.y = element_text(size=4,angle = 45))
# heatplot
base  = ggplot(df.C, aes(x = Daytime, y = reorder(Crime, Percent), fill = Percent))
heat1 = base +  geom_tile()
heat2 = heat1 +scale_fill_gradient(low = "white",
high = "black")
heat2
base  = ggplot(df.C, aes(x = Daytime, y = reorder(Crime, -Percent), fill = Percent))
heat1 = base +  geom_tile()
heat2 = heat1 +scale_fill_gradient(low = "white",
high = "black")
heat2
base  = ggplot(df.C, aes(x = Daytime, y = reorder(Crime, -Percent), fill = Percent))
heat1 = base +  geom_tile()
heat2 = heat1 +scale_fill_gradient(low = "purple",
high = "yellow")
heat2
base  = ggplot(df.C, aes(x = Daytime, y = reorder(Crime, -Percent), fill = Percent))
heat1 = base +  geom_tile()
heat2 = heat1 +scale_fill_gradient(low = "yellow",
high = "purple")
heat2
base  = ggplot(df.C, aes(x = Daytime, y = reorder(Crime, -Percent), fill = Percent))
heat1 = base +  geom_tile()
heat2 = heat1 +scale_fill_gradient(low = "yellow",
high = "purple")
heat3 = heat2 + theme_classic()
heat4 = heat3 + theme(axis.text.x = element_text(angle = 90, vjust = 0.6),
legend.title = element_blank(), #no title for legend
legend.position="top",
legend.direction="horizontal",
legend.key.width=unit(1, "cm"),
legend.key.height=unit(1, "cm"))
heat4 + labs(y="Crime")
summary(crime$DaysToReport)
tapply(crime$DaysToReport,crime$Precinct,mean)
boxplot(DaysToReport~Precinct,data=crime)
tapply(crime$DaysToReport,crime$Precinct,summary)
boxplot(DaysToReport~Precinct,data=crime,
subset = DaysToReport>1) #subsetting
par(mfrow=c(2,2)) # 2 rows, and two columns, by row:
boxplot(DaysToReport~Precinct,data=crime,subset = DaysToReport>=7,
main="One week or more")
boxplot(DaysToReport~Precinct,data=crime,subset = DaysToReport>=30,
main="One 30-day month or more")
boxplot(DaysToReport~Precinct,data=crime,subset = DaysToReport>=180,
main="180 days or more")
boxplot(DaysToReport~Precinct,data=crime,subset = DaysToReport>=365,
main="One year or more")
# the pie plots the table:
ToPlot=prop.table(absoluteT)
link='https://github.com/EvansDataScience/VisualAnalytics_2_tabularData/raw/master/data/eduwa.rda'
#getting the data TABLE from the file in the cloud:
load(file=url(link))
# relative values
absoluteT=table(eduwa$LocaleType,exclude = 'nothing')
prop.table(absoluteT)
# the pie plots the table:
ToPlot=prop.table(absoluteT)
pie(ToPlot)
link='https://github.com/EvansDataScience/VisualAnalytics_2_tabularData/raw/master/data/eduwa.rda'
#getting the data TABLE from the file in the cloud:
load(file=url(link))
=======
library(ggplot2)
#box2
title="Box plot of maximum grade in WA"
box3 = box2 + labs(title=title,
x="",
y="Grade level")
tableFreq[order(-tableFreq$pct),]
table(eduwa$High.Grade,exclude = 'nothing')
>>>>>>> 66ca589016ad37845d647f66a159ed571fecd682
tableFreq=as.data.frame(ToPlot)
names(tableFreq)=c("locale","pct")
#you have:
tableFreq
library(ggplot2)
#base GGPLOT2 starts with a "base", telling WHAT VARIABLES TO PLOT
base= ggplot(data = tableFreq,
aes(x = locale,
y = pct))
plot1 = base + geom_bar(fill ="gray",
stat = 'identity') # y is just what it is!
plot1
plot2 = plot1 + labs(title=titleText2,
x =NULL,
y = NULL,
caption = sourceText)
plot2
plot3 = plot2 + geom_hline(yintercept = 25, #where
linetype="dashed",
size=1.5, #thickness
alpha=0.5) #transparency
plot3
library(scales)
# customize Y axis
plot4 = plot3 + scale_y_continuous(breaks=c(0,10, 25,40,50),
limits = c(0, 50), # expand = c(0, 0),
labels=scales::unit_format(suffix = '%'))
plot4
plot5 = plot4 + theme(panel.background = element_rect(fill = "white",
colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5))
plot5
plot6 = plot5 + geom_text(aes(
y = pct ,
label = paste0(round(pct,2), '%')),
vjust=1, # if flipping 'hjust'
size = 3)
# wanna flip the plot?
plot6 #+ coord_flip()
tableFreq[order(-tableFreq$pct),]
plot7=plot6 + coord_flip() + aes(x=reorder(locale, pct))
plot7
###
ToPlotOrd=sort(ToPlot)
###
par(mgp=c(1,0.5,0)) # distance label, tickText,tick
location=barplot(ToPlotOrd,
col = paletteHereNew,
border=NA,
main=titleText2,
xlim=c(0,50),
xlab = '(in %)',
horiz = T,
cex.names = 0.7,
cex.lab=0.6,
xaxt="n") # no x-axis, so I customize it below...
text(x=ToPlotOrd,y=location,labels=plotLabels,pos = 2,cex = 0.7)
base = ggplot(tableFreq, aes(x=locale,pct))
plot2 = plot1 + labs(title=titleText2,
x =NULL,
y = NULL,
caption = sourceText)
link='https://github.com/EvansDataScience/VisualAnalytics_2_tabularData/raw/master/data/eduwa.rda'
#getting the data TABLE from the file in the cloud:
load(file=url(link))
# absolute values
table(eduwa$LocaleType,exclude = 'nothing')
# relative values
absoluteT=table(eduwa$LocaleType,exclude = 'nothing')
prop.table(absoluteT)
# the pie plots the table:
ToPlot=prop.table(absoluteT)
# the pie plots the table:
ToPlot=prop.table(absoluteT)
names(ToPlot)
names(ToPlot)[5]='Unknown'
# the pie plots the table:
titleText='Where are Public Schools located in WA in 2019?'
sourceText='Source: US Department of Education'
# the pie plots the table:
titleText2='WA still has schools locations unknown \n (info from 2018)'
# the pie plots the table:
titleText3='WA needs to fully categorize school locations\n(info from 2018)'
#DMC - the \n moves the rest of the title to the next line
ToPlot*100
# details:
ToPlot=ToPlot*100 # preparing labels
paletteHereNew=c('gray') # just one color
tableFreq=as.data.frame(ToPlot)
names(tableFreq)=c("locale","pct")
#you have:
tableFreq
library(ggplot2)
#base GGPLOT2 starts with a "base", telling WHAT VARIABLES TO PLOT
base= ggplot(data = tableFreq,
aes(x = locale,
y = pct))
plot1 = base + geom_bar(fill ="gray",
stat = 'identity') # y is just what it is!
#plot1
plot2 = plot1 + labs(title=titleText2,
x =NULL,
y = NULL,
caption = sourceText)
#plot2
plot3 = plot2 + geom_hline(yintercept = 25, #where
linetype="dashed",
size=1.5, #thickness
alpha=0.5) #transparency
#plot3
library(scales)
# customize Y axis
plot4 = plot3 + scale_y_continuous(breaks=c(0,10, 25,40,50),
limits = c(0, 50), # expand = c(0, 0),
labels=scales::unit_format(suffix = '%'))
#plot4
plot5 = plot4 + theme(panel.background = element_rect(fill = "white",
colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5))
#plot5
plot6 = plot5 + geom_text(aes(
y = pct ,
label = paste0(round(pct,2), '%')),
vjust=1, # if flipping 'hjust'
size = 3)
# wanna flip the plot?
#plot6 #+ coord_flip()
tableFreq[order(-tableFreq$pct),]
plot7=plot6 + coord_flip() + aes(x=reorder(locale, pct))
plot7
base = ggplot(tableFreq, aes(x=locale,pct))
lolliplot1=base + geom_segment(aes(y = 0,
x = locale,
yend = pct,
xend = locale), color = "grey50")
lolliplot1 + geom_point()
tableFreq[order(tableFreq$pct),]
# reordering DF steps:
tableFreqO=tableFreq[order(tableFreq$pct),]
base = ggplot(tableFreqO, aes(locale,pct))
lolliplot1=base + geom_segment(aes(y = 0,
x = locale,
yend = pct,
xend = locale), color = "gray")
lolliplot2 = lolliplot1 + geom_point()
lolliplot2 + scale_x_discrete(limits=tableFreqO$locale) # key element
# new variable
tableFreqO$gap=tableFreqO$pct-25
# plot the new variable
base = ggplot(tableFreqO, aes(locale,gap))
lolliplot1=base + geom_segment(aes(y = 0,
x = locale,
yend = gap,
xend = locale), color = "gray")
lolliplot2 = lolliplot1 + geom_point()
lolliplot2 + scale_x_discrete(limits=tableFreqO$locale) # key element
# a new column for color
tableFreqO$PositiveGap=ifelse(tableFreqO$gap>0,T,F)
# add new aesthetics 'color'
base = ggplot(tableFreqO, aes(locale,gap,
color=PositiveGap)) #change
lolliplot1=base + geom_segment(aes(y = 0,
x = locale,
yend = gap,
xend = locale), color = "gray")
lolliplot2 = lolliplot1 + geom_point()
lolliplot2 + scale_x_discrete(limits=tableFreqO$locale) # key element
# a new column for color
tableFreqO$PositiveGap=ifelse(tableFreqO$gap>0,T,F)
base = ggplot(tableFreqO, aes(locale,gap,color=PositiveGap,
label = round(gap,3))) #  change
lolliplot1=base + geom_segment(aes(y = 0,
x = locale,
yend = gap,
xend = locale), color = "gray")
lolliplot2=lolliplot1 + geom_point()
lolliplot3= lolliplot2 + scale_x_discrete(limits=tableFreqO$locale)
# annotating and moving the text on the horizontal
lolliplot3 + geom_text(nudge_x=0.3)
lolliplot3 + geom_text(nudge_x=0.3,show.legend = FALSE)
plot6 = plot5 + geom_text(aes(
y = pct ,
label = paste0(round(pct,2), '%')),
vjust=1, # if flipping 'hjust'
size = 3)
# wanna flip the plot?
plot6 #+ coord_flip()
plot6 = plot5 + geom_text(aes(
y = pct ,
label = paste0(round(pct,2), '%')),
vjust=1, # if flipping 'hjust'
size = 3)
# wanna flip the plot?
#plot6 #+ coord_flip()
plot6
library(scales)
# customize Y axis
plot4 = plot3 + scale_y_continuous(breaks=c(0,10, 25,40,50),
limits = c(0, 50), # expand = c(0, 0),
labels=scales::unit_format(suffix = '%'))
plot4
link='https://github.com/EvansDataScience/VisualAnalytics_2_tabularData/raw/master/data/eduwa.rda'
#getting the data TABLE from the file in the cloud:
load(file=url(link))
# absolute values
table(eduwa$LocaleType,exclude = 'nothing')
# relative values
absoluteT=table(eduwa$LocaleType,exclude = 'nothing')
prop.table(absoluteT)
# the pie plots the table:
ToPlot=prop.table(absoluteT)
names(ToPlot)
names(ToPlot)[5]='Unknown'
# the pie plots the table:
titleText='Where are Public Schools located in WA in 2019?'
sourceText='Source: US Department of Education'
# the pie plots the table:
titleText2='WA still has schools locations unknown \n (info from 2018)'
# the pie plots the table:
titleText3='WA needs to fully categorize school locations\n(info from 2018)'
#DMC - the \n moves the rest of the title to the next line
ToPlot*100
# details:
ToPlot=ToPlot*100 # preparing labels
paletteHereNew=c('gray') # just one color
tableFreq=as.data.frame(ToPlot)
names(tableFreq)=c("locale","pct")
#you have:
tableFreq
library(ggplot2)
#base GGPLOT2 starts with a "base", telling WHAT VARIABLES TO PLOT
base= ggplot(data = tableFreq,
aes(x = locale,
y = pct))
plot1 = base + geom_bar(fill ="gray",
stat = 'identity') # y is just what it is!
#plot1
plot2 = plot1 + labs(title=titleText,
x = NULL,
y = NULL,
caption = sourceText)
#plot2
plot3 = plot2 + geom_hline(yintercept = 25, #where
linetype="dashed",
size=1.5, #thickness
alpha=0.5) #transparency
#plot3
library(scales)
# customize Y axis
plot4 = plot3 + scale_y_continuous(breaks=c(0,10, 25,40,50),
limits = c(0, 50), # expand = c(0, 0),
labels=scales::unit_format(suffix = '%'))
plot4
plot3 = plot2 + geom_hline(yintercept = 25, #where
linetype="dashed",
size=1.5, #thickness
alpha=0.5) #transparency
#plot3
plot3 = plot2 + geom_hline(yintercept = 25, #where
linetype="dashed",
size=1.5, #thickness
alpha=0.5) #transparency
#plot3
plot3 = plot2 + geom_hline(yintercept = 25, #where
linetype="dashed",
size=1.5, #thickness
alpha=0.5) #transparency
#plot3
plot3 = plot2 + geom_hline(yintercept = 25, #where
linetype="dashed",
size=1.5, #thickness
alpha=0.5) #transparency
#plot3
plot3 = plot2 + geom_hline(yintercept = 25, #where
linetype="dashed",
size=1.5, #thickness
alpha=0.5) #transparency
plot3
library(scales)
# customize Y axis
plot4 = plot3 + scale_y_continuous(breaks=c(0,10, 25,40,50),
limits = c(0, 50), # expand = c(0, 0),
labels=scales::unit_format(suffix = '%'))
plot4
library(scales)
# customize Y axis
plot4 = plot3 + scale_y_continuous(breaks=c(0,10, 25,40,50),
limits = c(0, 50), # expand = c(0, 0),
labels=scales::unit_format(suffix = '%'))
plot4
library(scales)
# customize Y axis
plot4 = plot3 + scale_y_continuous(breaks=c(0,10, 25,40,50),
limits = c(0, 50), # expand = c(0, 0),
labels=scales::unit_format(suffix = "%"))
plot4
library(scales)
# customize Y axis
plot4 = plot3 + scale_y_continuous(breaks=c(0,10, 25,40,50),
limits = c(0, 50), # expand = c(0, 0),
labels=scales::unit_format(suffix = %))
library(scales)
# customize Y axis
plot4 = plot3 + scale_y_continuous(breaks=c(0,10, 25,40,50),
limits = c(0, 50), # expand = c(0, 0),
labels=scales::unit_format(suffix = "%"))
plot4
library(scales)
# customize Y axis
plot4 = plot3 + scale_y_continuous(breaks=c(0,10, 25,40,50),
limits = c(0, 50), # expand = c(0, 0),
labels=scales::unit_format(suffix = "[%]"))
plot4
library(scales)
# customize Y axis
plot4 = plot3 + scale_y_continuous(breaks=c(0,10, 25,40,50),
limits = c(0, 50), # expand = c(0, 0),
labels=scales::unit_format(suffix = "x"))
plot4
library(scales)
# customize Y axis
plot4 = plot3 + scale_y_continuous(breaks=c(0,10, 25,40,50),
limits = c(0, 50), # expand = c(0, 0),
labels=scales::unit_format(suffix = "%"))
plot4
library(scales)
# customize Y axis
plot4 = plot3 + scale_y_continuous(breaks=c(0,10, 25,40,50),
limits = c(0, 50), # expand = c(0, 0),
)
plot4
library(scales)
# customize Y axis
plot4 = plot3 + scale_y_continuous(breaks=c(0,10, 25,40,50),
limits = c(0, 50), # expand = c(0, 0),
labels=scales::unit_format(suffix = "%"))
plot4
library(scales)
# customize Y axis
plot4 = plot3 + scale_y_continuous(breaks=c(0,10, 25,40,50),
limits = c(0, 50), # expand = c(0, 0),
labels=scales::percent_format(suffix = "%"))
library(scales)
# customize Y axis
plot4 = plot3 + scale_y_continuous(breaks=c(0,10, 25,40,50),
limits = c(0, 50), # expand = c(0, 0),
labels=scales::percent_format())
plot4
link='https://github.com/EvansDataScience/VisualAnalytics_2_tabularData/raw/master/data/eduwa.rda'
#getting the data TABLE from the file in the cloud:
load(file=url(link))
# absolute values
table(eduwa$LocaleType,exclude = 'nothing')
# relative values
absoluteT=table(eduwa$LocaleType,exclude = 'nothing')
prop.table(absoluteT)
# the pie plots the table:
ToPlot=prop.table(absoluteT)
names(ToPlot)
names(ToPlot)[5]='Unknown'
# the pie plots the table:
titleText='Where are Public Schools located in WA in 2019?'
sourceText='Source: US Department of Education'
# the pie plots the table:
titleText2='WA still has schools locations unknown \n (info from 2018)'
# the pie plots the table:
titleText3='WA needs to fully categorize school locations\n(info from 2018)'
#DMC - the \n moves the rest of the title to the next line
ToPlot*100
# details:
ToPlot=ToPlot*100 # preparing labels
paletteHereNew=c('gray') # just one color
tableFreq=as.data.frame(ToPlot)
names(tableFreq)=c("locale","pct")
#you have:
tableFreq
library(ggplot2)
#base GGPLOT2 starts with a "base", telling WHAT VARIABLES TO PLOT
base= ggplot(data = tableFreq,
aes(x = locale,
y = pct))
plot1 = base + geom_bar(fill ="gray",
stat = 'identity') # y is just what it is!
#plot1
plot2 = plot1 + labs(title=titleText,
x = NULL,
y = NULL,
caption = sourceText)
#plot2
plot3 = plot2 + geom_hline(yintercept = 25, #where
linetype="dashed",
size=1.5, #thickness
alpha=0.5) #transparency
plot3
library(scales)
# customize Y axis
plot4 = plot3 + scale_y_continuous(breaks=c(0,10, 25,40,50),
limits = c(0, 50), # expand = c(0, 0),
labels=scales::unit_format(suffix = "%"))
plot4
plot5 = plot4 + theme(panel.background = element_rect(fill = "white",
colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5))
#plot5
plot6 = plot5 + geom_text(aes(
y = pct ,
label = paste0(round(pct,2), '%')),
vjust=1, # if flipping 'hjust'
size = 3)
# wanna flip the plot?
#plot6 #+ coord_flip()
tableFreq[order(-tableFreq$pct),]
link='https://github.com/EvansDataScience/VisualAnalytics_2_tabularData/raw/master/data/eduwa.rda'
#getting the data TABLE from the file in the cloud:
load(file=url(link))
# absolute values
table(eduwa$LocaleType,exclude = 'nothing')
>>>>>>> 874c48cb237f5cc7b4273c9baa89648c0b3e2167
# relative values
absoluteT=table(eduwa$LocaleType,exclude = 'nothing')
prop.table(absoluteT)
# the pie plots the table:
ToPlot=prop.table(absoluteT)
<<<<<<< HEAD
pie(ToPlot)
# the pie plots the table:
ToPlot=prop.table(absoluteT)
pie(ToPlot)
=======
names(ToPlot)
names(ToPlot)[5]='Unknown'
# the pie plots the table:
titleText='Where are Public Schools located in WA in 2019?'
sourceText='Source: US Department of Education'
# the pie plots the table:
titleText2='WA still has schools locations unknown \n (info from 2018)'
# the pie plots the table:
titleText3='WA needs to fully categorize school locations\n(info from 2018)'
#DMC - the \n moves the rest of the title to the next line
ToPlot*100
# details:
ToPlot=ToPlot*100 # preparing labels
paletteHereNew=c('gray') # just one color
tableFreq=as.data.frame(ToPlot)
names(tableFreq)=c("locale","pct")
#you have:
tableFreq
library(ggplot2)
#base GGPLOT2 starts with a "base", telling WHAT VARIABLES TO PLOT
base= ggplot(data = tableFreq,
aes(x = locale,
y = pct))
plot1 = base + geom_bar(fill ="gray",
stat = 'identity') # y is just what it is!
#plot1
plot2 = plot1 + labs(title=titleText,
x = NULL,
y = NULL,
caption = sourceText)
#plot2
plot3 = plot2 + geom_hline(yintercept = 25, #where
linetype="dashed",
size=1.5, #thickness
alpha=0.5) #transparency
plot3
library(scales)
# customize Y axis
plot4 = plot3 + scale_y_continuous(breaks=c(0,10, 25,40,50),
limits = c(0, 50), # expand = c(0, 0),
labels=scales::unit_format(suffix = "%"))
plot4
plot5 = plot4 + theme(panel.background = element_rect(fill = "white",
colour = "grey50"),
plot.caption = element_text(hjust = 0), # default was 1
plot.title = element_text(hjust = 0.5))
#plot5
plot6 = plot5 + geom_text(aes(
y = pct ,
label = paste0(round(pct,2), '%')),
vjust=1, # if flipping 'hjust'
size = 3)
# wanna flip the plot?
#plot6 #+ coord_flip()
tableFreq[order(-tableFreq$pct),]
<<<<<<< HEAD
lolliplot4 = lolliplot3 + + labs(title=titleText,
x = NULL,
y = NULL,
caption = sourceText)
lolliplot4 = lolliplot3 + labs(title=titleText,
x = NULL,
y = NULL,
caption = sourceText)
lolliplot4 = lolliplot3 + labs(title=titleText,
x = NULL,
y = NULL,
caption = sourceText)
lolliplot4 = lolliplot3 + labs(title=titleText,
x = NULL,
y = NULL,
caption = sourceText)
lolliplot4
=======
plot7=plot6 + coord_flip() + aes(x=reorder(locale, pct))
plot7
###
ToPlotOrd=sort(ToPlot)
###
par(mgp=c(1,0.5,0)) # distance label, tickText,tick
location=barplot(ToPlotOrd,
col = paletteHereNew,
border=NA,
main=titleText2,
xlim=c(0,50),
xlab = '(in %)',
horiz = T,
cex.names = 0.7,
cex.lab=0.6,
xaxt="n") # no x-axis, so I customize it below...
text(x=ToPlotOrd,y=location,labels=plotLabels,pos = 2,cex = 0.7)
>>>>>>> 874c48cb237f5cc7b4273c9baa89648c0b3e2167
>>>>>>> 66ca589016ad37845d647f66a159ed571fecd682
